{"ast":null,"code":"var _jsxFileName = \"/home/vanessa/Bureau/WILD CODE SCHOOL/checkpoint/checkpoint-4/WildCircusTalents/front/src/components/inscriptions/InscriptionsForm.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst currencies = [{\n  value: 'PRESENTER',\n  label: 'PRESENTER'\n}, {\n  value: 'CLOWN',\n  label: 'CLOWN'\n}, {\n  value: 'JUGGLER',\n  label: 'JUGGLER'\n}, {\n  label: 'ACROBAT',\n  value: 'ACROBAT'\n}, {\n  value: 'DANCER',\n  label: 'DANCER'\n}];\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  }\n}));\nexport default function InscriptionsForm() {\n  const classes = useStyles(); //   const [values, setValues] = React.useState({\n  //     name: 'Your first name here',\n  //     age: '',\n  //     multiline: 'Controlled',\n  //     currency: 'EUR',\n  //   });\n  //   const handleChange = (name) => (event) => {\n  //     setValues({ ...values, [name]: event.target.value });\n  //   };\n\n  return React.createElement(\"div\", {\n    style: {\n      padding: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"filled-firstName\",\n    label: \"First Name\",\n    className: classes.textField // value={values.name}\n    // onChange={handleChange('name')}\n    ,\n    margin: \"normal\",\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"filled-lastName\",\n    label: \"Last Name\",\n    className: classes.textField // value={values.name}\n    // onChange={handleChange('name')}\n    ,\n    margin: \"normal\",\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"filled-email-input\",\n    label: \"Email\",\n    className: classes.textField,\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"filled-phone\",\n    label: \"Phone Number\",\n    className: classes.textField // value={values.name}\n    // onChange={handleChange('name')}\n    ,\n    margin: \"normal\",\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"filled-select-currency-native\",\n    select: true,\n    label: \"Role\",\n    className: classes.textField // value={values.currency}\n    // onChange={handleChange('currency')}\n    ,\n    SelectProps: {\n      native: true,\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    helperText: \"Please select your role\",\n    margin: \"normal\",\n    variant: \"filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, currencies.map(option => React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, option.label)))), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Submit\"));\n}","map":{"version":3,"sources":["/home/vanessa/Bureau/WILD CODE SCHOOL/checkpoint/checkpoint-4/WildCircusTalents/front/src/components/inscriptions/InscriptionsForm.jsx"],"names":["React","makeStyles","TextField","Button","currencies","value","label","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","InscriptionsForm","classes","padding","native","MenuProps","className","map","option","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst currencies = [\n  {\n    value: 'PRESENTER',\n    label: 'PRESENTER',\n  },\n  {\n    value: 'CLOWN',\n    label: 'CLOWN',\n  },\n  {\n    value: 'JUGGLER',\n    label: 'JUGGLER',\n  },\n  {\n    label: 'ACROBAT',\n    value: 'ACROBAT',\n  },\n  {\n    value: 'DANCER',\n    label: 'DANCER',\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function InscriptionsForm() {\n  const classes = useStyles();\n  //   const [values, setValues] = React.useState({\n  //     name: 'Your first name here',\n  //     age: '',\n  //     multiline: 'Controlled',\n  //     currency: 'EUR',\n  //   });\n\n  //   const handleChange = (name) => (event) => {\n  //     setValues({ ...values, [name]: event.target.value });\n  //   };\n\n  return (\n    <div style={{ padding: 30 }}>\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          id=\"filled-firstName\"\n          label=\"First Name\"\n          className={classes.textField}\n          // value={values.name}\n          // onChange={handleChange('name')}\n          margin=\"normal\"\n          variant=\"filled\"\n        />\n        <TextField\n          required\n          id=\"filled-lastName\"\n          label=\"Last Name\"\n          className={classes.textField}\n          // value={values.name}\n          // onChange={handleChange('name')}\n          margin=\"normal\"\n          variant=\"filled\"\n        />\n\n        <TextField\n          required\n          id=\"filled-email-input\"\n          label=\"Email\"\n          className={classes.textField}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"email\"\n          margin=\"normal\"\n          variant=\"filled\"\n        />\n\n        <TextField\n          id=\"filled-phone\"\n          label=\"Phone Number\"\n          className={classes.textField}\n          // value={values.name}\n          // onChange={handleChange('name')}\n          margin=\"normal\"\n          variant=\"filled\"\n        />\n\n        <TextField\n          id=\"filled-select-currency-native\"\n          select\n          label=\"Role\"\n          className={classes.textField}\n          // value={values.currency}\n          // onChange={handleChange('currency')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Please select your role\"\n          margin=\"normal\"\n          variant=\"filled\"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </form>\n      <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}